#include <iostream>
using namespace std;

namespace NodeCreation {
    class Node {
    public:
        int data;
        Node* next;

        Node() {
            this->next = NULL;
        }

        Node(int data) {
            this->data = data;
            this->next = NULL;
        }
    };

    void printLL(Node* head) {
        Node* temp = head;

        while (temp != NULL) {
            cout << temp->data << "->";
            temp = temp->next;
        }
        cout << endl;
    }

    void insertAtHead(Node*& head, Node*& tail, int data) {
        if (head == NULL) {
            Node* newNode = new Node(data);
            head = newNode;
            tail = newNode;
        } else {
            Node* newNode = new Node(data);
            newNode->next = head;
            head = newNode;
        }
    }

    void insertAtTail(Node*& head, Node*& tail, int data) {
        if (head == NULL) {
            Node* newNode = new Node(data);
            head = newNode;
            tail = newNode;
        } else {
            Node* newNode = new Node(data);
            tail->next = newNode;
            tail = newNode;
        }
    }
}

int main() {
    using namespace NodeCreation;

    Node* head = NULL;
    Node* tail = NULL;

    insertAtHead(head, tail, 10);
    insertAtTail(head, tail, 20);
    insertAtTail(head, tail, 30);

    printLL(head);

    return 0;
}

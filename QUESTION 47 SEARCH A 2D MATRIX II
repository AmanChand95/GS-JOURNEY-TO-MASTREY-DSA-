class Solution {
public:
    bool searchMatrix(vector<vector<int>>& matrix, int target) {
        int n = matrix.size();
        int m = matrix[0].size();
        int row = 0, col = m - 1;

                while (row < n && col >= 0) {
            if (matrix[row][col] == target) 
                return true;
            else if (matrix[row][col] < target) 
                row++;
            else 
                col--;
        }
        return false;
    }
};

Approach:
Start from the top-right corner of the matrix. Move left if the current element is greater than the target
Move down if the current element is smaller than the target. Continue until the target is found or the boundaries are exceeded

Time Complexity: O(n + m). In the worst case, we traverse at most n rows and m columns

Space Complexity: O(1). Only using a constant amount of extra space for variables


class Solution {
public:
    string longestCommonPrefix(vector<string>& strs) {
        string ans = "";
        int n = strs.size(); 
        
        if (n == 0) return ans;

        for(int i = 0; i < strs[0].length(); i++) {
            char ch = strs[0][i];
            bool match = true;

            for(int j = 1; j < n; j++) {
                if(strs[j].size() <= i || ch != strs[j][i]) {
                    match = false;
                    break;
                }
            }

            if(!match) {
                break;
            } else {
                ans.push_back(ch);
            }
        }

        return ans;
    }
};
Approach:

Iterate through characters of first string. For each character, check if it matches in all other strings
Stop when mismatch found or a string ends. Build prefix string as we go

Time complexity: O(S)
Space complexity: O(1)

